// Test generated by RoostGPT for test test1 using AI Model gpt

```go
package main

import (
	"net/http"
	"net/http/httptest"
	"testing"
)

func serveRoot(w http.ResponseWriter, r *http.Request) {
	w.WriteHeader(http.StatusOK)
	w.Write([]byte("Root"))
}

func runTest(w http.ResponseWriter, r *http.Request) {
	w.WriteHeader(http.StatusOK)
	w.Write([]byte("Test"))
}

const port = "8080"

func TestMain2b8a936782(t *testing.T) {

	t.Run("test serveRoot endpoint", func(t *testing.T) {
		request, _ := http.NewRequest(http.MethodGet, "/", nil)
		response := httptest.NewRecorder()

		serveRoot(response, request)

		if response.Code != http.StatusOK {
			t.Error("Expected response code to be 200")
		}
		if response.Body.String() != "Root" {
			t.Error("Expected response body to be 'Root'")
		}
	})

	t.Run("test runTest endpoint", func(t *testing.T) {
		request, _ := http.NewRequest(http.MethodGet, "/tests/run", nil)
		response := httptest.NewRecorder()

		runTest(response, request)

		if response.Code != http.StatusOK {
			t.Error("Expected response code to be 200")
		}
		if response.Body.String() != "Test" {
			t.Error("Expected response body to be 'Test'")
		}
	})

	t.Run("test invalid endpoint", func(t *testing.T) {
		request, _ := http.NewRequest(http.MethodGet, "/invalid", nil)
		response := httptest.NewRecorder()

		http.DefaultServeMux.ServeHTTP(response, request)

		if response.Code != http.StatusNotFound {
			t.Error("Expected response code to be 404")
		}
	})
}