// Test generated by RoostGPT for test test1 using AI Model gpt

package main

import (
	"testing"
)

type Vote struct {
	CandidateID string
}

var candidateVotesStore = make(map[string]int)

func saveVote(vote Vote) error {
	candidateVotesStore[vote.CandidateID]++
	return nil
}

func TestSaveVote31e2883bdc(t *testing.T) {
	// Test case 1: A new vote is added correctly
	vote := Vote{CandidateID: "candidate1"}
	err := saveVote(vote)
	if err != nil {
		t.Error("Failed to save vote: ", err)
	}
	if candidateVotesStore[vote.CandidateID] != 1 {
		t.Error("Vote count for candidate1 should be 1, but got ", candidateVotesStore[vote.CandidateID])
	}

	// Test case 2: An additional vote for an existing candidate is added correctly
	err = saveVote(vote)
	if err != nil {
		t.Error("Failed to save vote: ", err)
	}
	if candidateVotesStore[vote.CandidateID] != 2 {
		t.Error("Vote count for candidate1 should be 2, but got ", candidateVotesStore[vote.CandidateID])
	}

	// Test case 3: A vote for a new candidate is added correctly
	vote = Vote{CandidateID: "candidate2"}
	err = saveVote(vote)
	if err != nil {
		t.Error("Failed to save vote: ", err)
	}
	if candidateVotesStore[vote.CandidateID] != 1 {
		t.Error("Vote count for candidate2 should be 1, but got ", candidateVotesStore[vote.CandidateID])
	}
}
