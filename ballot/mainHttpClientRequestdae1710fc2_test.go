// Test generated by RoostGPT for test test1 using AI Model gpt

package main

import (
	"bytes"
	"fmt"
	"io"
	"net/http"
	"net/http/httptest"
	"testing"
)

func TestHttpClientRequestdae1710fc2(t *testing.T) {
	// Test case 1: Successful HTTP request
	t.Run("successful request", func(t *testing.T) {
		server := httptest.NewServer(http.HandlerFunc(func(rw http.ResponseWriter, req *http.Request) {
			rw.WriteHeader(http.StatusOK)
			fmt.Fprintln(rw, "Success")
		}))
		defer server.Close()

		status, body, err := httpClientRequest("GET", server.URL, "/", nil)
		if err != nil {
			t.Error("Expected no error, got ", err)
		}
		if status != http.StatusOK {
			t.Error("Expected status 200, got ", status)
		}
		if string(body) != "Success\n" {
			t.Error("Expected body 'Success', got ", string(body))
		}
	})

	// Test case 2: HTTP request with server error
	t.Run("server error", func(t *testing.T) {
		server := httptest.NewServer(http.HandlerFunc(func(rw http.ResponseWriter, req *http.Request) {
			rw.WriteHeader(http.StatusInternalServerError)
			fmt.Fprintln(rw, "Internal Server Error")
		}))
		defer server.Close()

		status, body, err := httpClientRequest("GET", server.URL, "/", nil)
		if err == nil {
			t.Error("Expected an error, got none")
		}
		if status != http.StatusInternalServerError {
			t.Error("Expected status 500, got ", status)
		}
		if string(body) != "Internal Server Error\n" {
			t.Error("Expected body 'Internal Server Error', got ", string(body))
		}
	})

	// Test case 3: HTTP request with invalid URL
	t.Run("invalid url", func(t *testing.T) {
		_, _, err := httpClientRequest("GET", ":", "/", nil)
		if err == nil {
			t.Error("Expected an error, got none")
		}
	})
}